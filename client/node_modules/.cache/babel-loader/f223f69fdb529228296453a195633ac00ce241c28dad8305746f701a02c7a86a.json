{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sinch\\\\.vscode\\\\Projects\\\\AI-Powered-Book-Summarizer\\\\client\\\\src\\\\components\\\\book-trends-visualization.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\n// Sample data for book trends\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genreTrendsData = [{\n  year: 2019,\n  fiction: 45,\n  nonFiction: 30,\n  mystery: 15,\n  sciFi: 10\n}, {\n  year: 2020,\n  fiction: 40,\n  nonFiction: 35,\n  mystery: 15,\n  sciFi: 10\n}, {\n  year: 2021,\n  fiction: 38,\n  nonFiction: 37,\n  mystery: 12,\n  sciFi: 13\n}, {\n  year: 2022,\n  fiction: 35,\n  nonFiction: 40,\n  mystery: 10,\n  sciFi: 15\n}, {\n  year: 2023,\n  fiction: 32,\n  nonFiction: 42,\n  mystery: 8,\n  sciFi: 18\n}];\nconst popularityData = [{\n  title: \"To Kill a Mockingbird\",\n  score: 95\n}, {\n  title: \"1984\",\n  score: 92\n}, {\n  title: \"Pride and Prejudice\",\n  score: 88\n}, {\n  title: \"The Great Gatsby\",\n  score: 85\n}, {\n  title: \"The Catcher in the Rye\",\n  score: 82\n}];\nconst BookTrendsVisualization = ({\n  compact = false\n}) => {\n  _s();\n  var _containerRef$current, _containerRef$current2;\n  const [activeTab, setActiveTab] = useState(\"genres\");\n  const [hoveredBar, setHoveredBar] = useState(null); // Stores ID of hovered bar (e.g., \"0-0\" for genre, 0 for popularity)\n  const [tooltip, setTooltip] = useState(null); // { x, y, content }\n  const [animateChart, setAnimateChart] = useState(false);\n  const chartRef = useRef(null);\n  const containerRef = useRef(null); // Ref for the chart's parent container\n\n  // Function to draw the genre chart\n  const drawGenreChart = useCallback(() => {\n    if (!chartRef.current || !containerRef.current) return;\n    const canvas = chartRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    // Set canvas dimensions to match its display size\n    canvas.width = containerRef.current.clientWidth;\n    canvas.height = compact ? 320 : 400;\n    const width = canvas.width;\n    const height = canvas.height;\n    const padding = {\n      top: 40,\n      right: 30,\n      bottom: 60,\n      left: 60\n    };\n    const chartWidth = width - padding.left - padding.right;\n    const chartHeight = height - padding.top - padding.bottom;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Draw background\n    ctx.fillStyle = \"rgba(10, 31, 28, 0.5)\";\n    ctx.fillRect(0, 0, width, height);\n\n    // Draw title\n    ctx.font = \"16px var(--font-cormorant)\";\n    ctx.fillStyle = \"#cdaf73\";\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"top\";\n    ctx.fillText(\"Genre Trends Over Time\", width / 2, 15);\n\n    // Draw axes\n    ctx.beginPath();\n    ctx.moveTo(padding.left, height - padding.bottom);\n    ctx.lineTo(width - padding.right, height - padding.bottom); // x-axis\n    ctx.moveTo(padding.left, padding.top);\n    ctx.lineTo(padding.left, height - padding.bottom); // y-axis\n    ctx.strokeStyle = \"rgba(205, 175, 115, 0.5)\";\n    ctx.lineWidth = 1;\n    ctx.stroke();\n\n    // Draw x-axis labels (years)\n    const barWidth = chartWidth / genreTrendsData.length / 4 * 0.8; // 4 genres, 80% width\n    const groupWidth = chartWidth / genreTrendsData.length;\n    const barSpacing = barWidth * 0.2;\n    genreTrendsData.forEach((data, i) => {\n      const x = padding.left + i * groupWidth + groupWidth / 2;\n      ctx.font = \"12px var(--font-cormorant)\";\n      ctx.fillStyle = \"#cdaf73\";\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"top\";\n      ctx.fillText(data.year.toString(), x, height - padding.bottom + 15);\n    });\n\n    // Draw y-axis labels (percentages)\n    for (let i = 0; i <= 100; i += 20) {\n      const y = height - padding.bottom - i / 100 * chartHeight;\n      ctx.font = \"10px var(--font-lora)\";\n      ctx.fillStyle = \"#a8a090\";\n      ctx.textAlign = \"right\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillText(`${i}%`, padding.left - 10, y);\n\n      // Draw grid line\n      ctx.beginPath();\n      ctx.moveTo(padding.left, y);\n      ctx.lineTo(width - padding.right, y);\n      ctx.strokeStyle = \"rgba(205, 175, 115, 0.1)\";\n      ctx.stroke();\n    }\n\n    // Define colors for each genre\n    const colors = {\n      fiction: \"rgba(205, 175, 115, 0.8)\",\n      nonFiction: \"rgba(150, 130, 85, 0.8)\",\n      mystery: \"rgba(100, 85, 55, 0.8)\",\n      sciFi: \"rgba(70, 60, 40, 0.8)\"\n    };\n\n    // Draw bars with animation\n    const currentAnimationProgress = animateChart ? 1 : 0;\n    const genres = [\"fiction\", \"nonFiction\", \"mystery\", \"sciFi\"];\n    const genreLabels = {\n      fiction: \"Fiction\",\n      nonFiction: \"Non-Fiction\",\n      mystery: \"Mystery\",\n      sciFi: \"Sci-Fi\"\n    };\n    genreTrendsData.forEach((data, i) => {\n      const groupX = padding.left + i * groupWidth;\n      genres.forEach((genre, j) => {\n        const value = data[genre];\n        // Apply animation to bar height\n        const barHeight = value / 100 * chartHeight * currentAnimationProgress;\n        const x = groupX + j * (barWidth + barSpacing) + groupWidth * 0.1;\n        const y = height - padding.bottom - barHeight;\n\n        // Draw bar\n        ctx.fillStyle = hoveredBar === `${i}-${j}` ? colors[genre].replace(\"0.8\", \"1\") // Darker on hover\n        : colors[genre];\n        ctx.fillRect(x, y, barWidth, barHeight);\n\n        // Draw value on top of bar if tall enough\n        if (barHeight > 20) {\n          ctx.font = \"10px var(--font-lora)\";\n          ctx.fillStyle = \"#e9e2d0\";\n          ctx.textAlign = \"center\";\n          ctx.textBaseline = \"bottom\";\n          ctx.fillText(value.toString(), x + barWidth / 2, y - 5);\n        }\n      });\n    });\n\n    // Draw legend\n    const legendX = padding.left;\n    const legendY = padding.top - 15;\n    const legendItemWidth = chartWidth / 4;\n    genres.forEach((genre, i) => {\n      const x = legendX + i * legendItemWidth;\n      const y = legendY;\n\n      // Draw color box\n      ctx.fillStyle = colors[genre];\n      ctx.fillRect(x, y, 10, 10);\n\n      // Draw label\n      ctx.font = \"12px var(--font-cormorant)\";\n      ctx.fillStyle = \"#cdaf73\";\n      ctx.textAlign = \"left\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillText(genreLabels[genre], x + 15, y + 5);\n    });\n  }, [animateChart, hoveredBar, compact]); // Add compact as a dependency\n\n  // Function to draw the popularity chart\n  const drawPopularityChart = useCallback(() => {\n    if (!chartRef.current || !containerRef.current) return;\n    const canvas = chartRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    // Set canvas dimensions to match its display size\n    canvas.width = containerRef.current.clientWidth;\n    canvas.height = compact ? 320 : 400;\n    const width = canvas.width;\n    const height = canvas.height;\n    const padding = {\n      top: 40,\n      right: 30,\n      bottom: 60,\n      left: 150\n    };\n    const chartWidth = width - padding.left - padding.right;\n    const chartHeight = height - padding.top - padding.bottom;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Draw background\n    ctx.fillStyle = \"rgba(10, 31, 28, 0.5)\";\n    ctx.fillRect(0, 0, width, height);\n\n    // Draw title\n    ctx.font = \"16px var(--font-cormorant)\";\n    ctx.fillStyle = \"#cdaf73\";\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"top\";\n    ctx.fillText(\"Most Popular Classic Books\", width / 2, 15);\n\n    // Draw axes\n    ctx.beginPath();\n    ctx.moveTo(padding.left, height - padding.bottom);\n    ctx.lineTo(width - padding.right, height - padding.bottom); // x-axis\n    ctx.moveTo(padding.left, padding.top);\n    ctx.lineTo(padding.left, height - padding.bottom); // y-axis\n    ctx.strokeStyle = \"rgba(205, 175, 115, 0.5)\";\n    ctx.lineWidth = 1;\n    ctx.stroke();\n\n    // Draw x-axis labels (scores)\n    for (let i = 0; i <= 100; i += 20) {\n      const x = padding.left + i / 100 * chartWidth;\n      ctx.font = \"10px var(--font-lora)\";\n      ctx.fillStyle = \"#a8a090\";\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"top\";\n      ctx.fillText(i.toString(), x, height - padding.bottom + 15);\n\n      // Draw grid line\n      ctx.beginPath();\n      ctx.moveTo(x, padding.top);\n      ctx.lineTo(x, height - padding.bottom);\n      ctx.strokeStyle = \"rgba(205, 175, 115, 0.1)\";\n      ctx.stroke();\n    }\n\n    // Calculate bar height and spacing\n    const barHeight = chartHeight / popularityData.length * 0.7;\n    const barSpacing = chartHeight / popularityData.length * 0.3;\n\n    // Draw bars with animation\n    const currentAnimationProgress = animateChart ? 1 : 0;\n    popularityData.forEach((book, i) => {\n      const y = padding.top + i * (barHeight + barSpacing);\n      const barWidth = book.score / 100 * chartWidth * currentAnimationProgress;\n\n      // Draw book title\n      ctx.font = \"12px var(--font-cormorant)\";\n      ctx.fillStyle = \"#cdaf73\";\n      ctx.textAlign = \"right\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillText(book.title, padding.left - 10, y + barHeight / 2);\n\n      // Draw bar\n      const gradient = ctx.createLinearGradient(padding.left, 0, padding.left + barWidth, 0);\n      gradient.addColorStop(0, \"rgba(205, 175, 115, 0.8)\");\n      gradient.addColorStop(1, \"rgba(205, 175, 115, 0.4)\");\n      ctx.fillStyle = hoveredBar === i ? \"rgba(205, 175, 115, 0.9)\" : gradient;\n      ctx.fillRect(padding.left, y, barWidth, barHeight);\n\n      // Draw score at end of bar\n      ctx.font = \"10px var(--font-lora)\";\n      ctx.fillStyle = \"#e9e2d0\";\n      ctx.textAlign = \"left\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillText(book.score.toString(), padding.left + barWidth + 5, y + barHeight / 2);\n    });\n  }, [animateChart, hoveredBar, compact]); // Add compact as a dependency\n\n  // Effect to handle chart drawing and resizing\n  useEffect(() => {\n    const renderChart = () => {\n      // Trigger animation every time the chart is rendered (e.g., on tab change or resize)\n      setAnimateChart(false);\n      setTimeout(() => setAnimateChart(true), 100);\n      if (activeTab === \"genres\") {\n        drawGenreChart();\n      } else if (activeTab === \"popularity\") {\n        drawPopularityChart();\n      }\n    };\n    const handleResize = () => {\n      renderChart(); // Redraw chart on window resize\n    };\n    renderChart(); // Initial render\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [activeTab, compact, drawGenreChart, drawPopularityChart]); // Dependencies for the effect\n\n  // Mouse move handler for tooltips and hover state\n  const handleMouseMove = e => {\n    if (!chartRef.current) return;\n    const rect = chartRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    let newHoveredBar = null;\n    let newTooltip = null;\n    if (activeTab === \"genres\") {\n      const padding = {\n        top: 40,\n        right: 30,\n        bottom: 60,\n        left: 60\n      };\n      const chartWidth = chartRef.current.width - padding.left - padding.right;\n      const chartHeight = chartRef.current.height - padding.top - padding.bottom;\n      const groupWidth = chartWidth / genreTrendsData.length;\n      const barWidth = groupWidth / 4 * 0.8;\n      const barSpacing = barWidth * 0.2;\n      const genres = [\"fiction\", \"nonFiction\", \"mystery\", \"sciFi\"];\n      const genreLabels = {\n        fiction: \"Fiction\",\n        nonFiction: \"Non-Fiction\",\n        mystery: \"Mystery\",\n        sciFi: \"Sci-Fi\"\n      };\n      for (let i = 0; i < genreTrendsData.length; i++) {\n        const groupX = padding.left + i * groupWidth;\n        for (let j = 0; j < 4; j++) {\n          const barX = groupX + j * (barWidth + barSpacing) + groupWidth * 0.1;\n          const value = genreTrendsData[i][[\"fiction\", \"nonFiction\", \"mystery\", \"sciFi\"][j]];\n          const barHeight = value / 100 * chartHeight;\n          const barY = chartRef.current.height - padding.bottom - barHeight;\n          if (x >= barX && x <= barX + barWidth && y >= barY && y <= chartRef.current.height - padding.bottom) {\n            newHoveredBar = `${i}-${j}`;\n            newTooltip = {\n              x: e.clientX,\n              y: e.clientY,\n              content: `${genreLabels[genres[j]]}: ${value}% (${genreTrendsData[i].year})`\n            };\n            break;\n          }\n        }\n        if (newHoveredBar) break;\n      }\n    } else if (activeTab === \"popularity\") {\n      const padding = {\n        top: 40,\n        right: 30,\n        bottom: 60,\n        left: 150\n      };\n      const chartWidth = chartRef.current.width - padding.left - padding.right;\n      const chartHeight = chartRef.current.height - padding.top - padding.bottom;\n      const barHeight = chartHeight / popularityData.length * 0.7;\n      const barSpacing = chartHeight / popularityData.length * 0.3;\n      for (let i = 0; i < popularityData.length; i++) {\n        const barY = padding.top + i * (barHeight + barSpacing);\n        const barWidth = popularityData[i].score / 100 * chartWidth;\n        if (x >= padding.left && x <= padding.left + barWidth && y >= barY && y <= barY + barHeight) {\n          newHoveredBar = i;\n          newTooltip = {\n            x: e.clientX,\n            y: e.clientY,\n            content: `${popularityData[i].title}: ${popularityData[i].score}`\n          };\n          break;\n        }\n      }\n    }\n    setHoveredBar(newHoveredBar);\n    setTooltip(newTooltip);\n  };\n  const handleMouseLeave = () => {\n    setHoveredBar(null);\n    setTooltip(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-trends-section mb-5\",\n    ref: containerRef // Attach ref to the container\n    ,\n    style: {\n      border: \"1px solid rgba(205, 175, 115, 0.2)\",\n      background: \"rgba(10, 31, 28, 0.5)\",\n      position: \"relative\" // Needed for tooltip positioning\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header text-center p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-heading mb-2\",\n        style: {\n          color: \"#cdaf73\",\n          fontWeight: \"300\",\n          letterSpacing: \"0.2em\",\n          fontSize: compact ? \"1.5rem\" : \"1.8rem\"\n        },\n        children: \"Genre & Popularity Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"decorative-line mx-auto mb-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mx-auto\",\n        style: {\n          maxWidth: \"600px\",\n          color: \"#a8a090\",\n          letterSpacing: \"0.05em\",\n          fontSize: compact ? \"0.85rem\" : \"0.95rem\",\n          fontWeight: \"300\",\n          lineHeight: \"1.7\"\n        },\n        children: \"Discover the evolving landscape of literary genres and the enduring impact of classic works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trends-tabs d-flex border-top border-bottom\",\n      style: {\n        borderColor: \"rgba(205, 175, 115, 0.2)\",\n        position: \"relative\",\n        overflow: \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-glow\",\n        style: {\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"25%\",\n          width: \"50%\",\n          height: \"1px\",\n          background: \"linear-gradient(90deg, rgba(205, 175, 115, 0), rgba(205, 175, 115, 0.3), rgba(205, 175, 115, 0))\",\n          zIndex: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"link\",\n        className: `tab-button flex-grow-1 py-2 ${activeTab === \"genres\" ? \"active\" : \"\"}`,\n        onClick: () => setActiveTab(\"genres\"),\n        style: {\n          color: activeTab === \"genres\" ? \"#cdaf73\" : \"#a8a090\",\n          textDecoration: \"none\",\n          borderBottom: activeTab === \"genres\" ? \"2px solid #cdaf73\" : \"none\",\n          borderRadius: 0,\n          fontFamily: \"var(--font-cormorant)\",\n          letterSpacing: \"0.1em\"\n        },\n        children: \"Genre Trends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"link\",\n        className: `tab-button flex-grow-1 py-2 ${activeTab === \"popularity\" ? \"active\" : \"\"}`,\n        onClick: () => setActiveTab(\"popularity\"),\n        style: {\n          color: activeTab === \"popularity\" ? \"#cdaf73\" : \"#a8a090\",\n          textDecoration: \"none\",\n          borderBottom: activeTab === \"popularity\" ? \"2px solid #cdaf73\" : \"none\",\n          borderRadius: 0,\n          fontFamily: \"var(--font-cormorant)\",\n          letterSpacing: \"0.1em\"\n        },\n        children: \"Popularity Rankings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container p-3\",\n      ref: containerRef // Attach ref to the container\n      ,\n      style: {\n        height: compact ? \"320px\" : \"400px\",\n        position: \"relative\" // Ensure relative positioning for tooltip\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef\n        // Width and Height are now set dynamically in useEffect and useCallback\n        // Initial values are just placeholders for the component's first render\n        ,\n        width: 600,\n        height: 400,\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        } // Make canvas fill its container\n        ,\n        onMouseMove: handleMouseMove,\n        onMouseLeave: handleMouseLeave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 9\n      }, this), tooltip && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          left: tooltip.x - (((_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.getBoundingClientRect().left) || 0) + 10,\n          // Adjust for container's position\n          top: tooltip.y - (((_containerRef$current2 = containerRef.current) === null || _containerRef$current2 === void 0 ? void 0 : _containerRef$current2.getBoundingClientRect().top) || 0) + 10,\n          // Adjust for container's position\n          backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n          color: \"#e9e2d0\",\n          padding: \"5px 10px\",\n          borderRadius: \"4px\",\n          fontSize: \"0.8rem\",\n          pointerEvents: \"none\",\n          // Ensures it doesn't block mouse events on canvas\n          zIndex: 1000,\n          boxShadow: \"0 2px 5px rgba(0,0,0,0.3)\",\n          fontFamily: \"var(--font-lora)\"\n        },\n        children: tooltip.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-description p-3 text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"#a8a090\",\n          fontSize: compact ? \"0.8rem\" : \"0.9rem\",\n          fontStyle: \"italic\",\n          maxWidth: \"600px\",\n          margin: \"0 auto\"\n        },\n        children: activeTab === \"genres\" ? \"This visualization shows the shifting popularity of literary genres over the past five years, with non-fiction steadily gaining ground while traditional fiction sees a gradual decline.\" : \"Based on reader ratings and critical acclaim, these classic works continue to resonate with audiences across generations, maintaining their literary significance.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 397,\n    columnNumber: 5\n  }, this);\n};\n_s(BookTrendsVisualization, \"d7EYIImQ4TsWs0XDLO+K1tmSBxY=\");\n_c = BookTrendsVisualization;\nexport default BookTrendsVisualization;\nvar _c;\n$RefreshReg$(_c, \"BookTrendsVisualization\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","useRef","useCallback","Button","jsxDEV","_jsxDEV","genreTrendsData","year","fiction","nonFiction","mystery","sciFi","popularityData","title","score","BookTrendsVisualization","compact","_containerRef$current","_containerRef$current2","activeTab","setActiveTab","hoveredBar","setHoveredBar","tooltip","setTooltip","animateChart","setAnimateChart","chartRef","containerRef","drawGenreChart","current","canvas","ctx","getContext","width","clientWidth","height","padding","top","right","bottom","left","chartWidth","chartHeight","clearRect","fillStyle","fillRect","font","textAlign","textBaseline","fillText","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","barWidth","length","groupWidth","barSpacing","forEach","data","i","x","toString","y","colors","currentAnimationProgress","genres","genreLabels","groupX","genre","j","value","barHeight","replace","legendX","legendY","legendItemWidth","drawPopularityChart","book","gradient","createLinearGradient","addColorStop","renderChart","setTimeout","handleResize","window","addEventListener","removeEventListener","handleMouseMove","e","rect","getBoundingClientRect","clientX","clientY","newHoveredBar","newTooltip","barX","barY","content","handleMouseLeave","className","ref","style","border","background","position","children","color","fontWeight","letterSpacing","fontSize","fileName","lineNumber","columnNumber","maxWidth","lineHeight","borderColor","overflow","zIndex","variant","onClick","textDecoration","borderBottom","borderRadius","fontFamily","onMouseMove","onMouseLeave","backgroundColor","pointerEvents","boxShadow","fontStyle","margin","_c","$RefreshReg$"],"sources":["C:/Users/sinch/.vscode/Projects/AI-Powered-Book-Summarizer/client/src/components/book-trends-visualization.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n// Sample data for book trends\r\nconst genreTrendsData = [\r\n  { year: 2019, fiction: 45, nonFiction: 30, mystery: 15, sciFi: 10 },\r\n  { year: 2020, fiction: 40, nonFiction: 35, mystery: 15, sciFi: 10 },\r\n  { year: 2021, fiction: 38, nonFiction: 37, mystery: 12, sciFi: 13 },\r\n  { year: 2022, fiction: 35, nonFiction: 40, mystery: 10, sciFi: 15 },\r\n  { year: 2023, fiction: 32, nonFiction: 42, mystery: 8, sciFi: 18 },\r\n];\r\n\r\nconst popularityData = [\r\n  { title: \"To Kill a Mockingbird\", score: 95 },\r\n  { title: \"1984\", score: 92 },\r\n  { title: \"Pride and Prejudice\", score: 88 },\r\n  { title: \"The Great Gatsby\", score: 85 },\r\n  { title: \"The Catcher in the Rye\", score: 82 },\r\n];\r\n\r\nconst BookTrendsVisualization = ({ compact = false }) => {\r\n  const [activeTab, setActiveTab] = useState(\"genres\");\r\n  const [hoveredBar, setHoveredBar] = useState(null); // Stores ID of hovered bar (e.g., \"0-0\" for genre, 0 for popularity)\r\n  const [tooltip, setTooltip] = useState(null); // { x, y, content }\r\n  const [animateChart, setAnimateChart] = useState(false);\r\n  const chartRef = useRef(null);\r\n  const containerRef = useRef(null); // Ref for the chart's parent container\r\n\r\n  // Function to draw the genre chart\r\n  const drawGenreChart = useCallback(() => {\r\n    if (!chartRef.current || !containerRef.current) return;\r\n\r\n    const canvas = chartRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    // Set canvas dimensions to match its display size\r\n    canvas.width = containerRef.current.clientWidth;\r\n    canvas.height = compact ? 320 : 400;\r\n\r\n    const width = canvas.width;\r\n    const height = canvas.height;\r\n    const padding = { top: 40, right: 30, bottom: 60, left: 60 };\r\n    const chartWidth = width - padding.left - padding.right;\r\n    const chartHeight = height - padding.top - padding.bottom;\r\n\r\n    // Clear canvas\r\n    ctx.clearRect(0, 0, width, height);\r\n\r\n    // Draw background\r\n    ctx.fillStyle = \"rgba(10, 31, 28, 0.5)\";\r\n    ctx.fillRect(0, 0, width, height);\r\n\r\n    // Draw title\r\n    ctx.font = \"16px var(--font-cormorant)\";\r\n    ctx.fillStyle = \"#cdaf73\";\r\n    ctx.textAlign = \"center\";\r\n    ctx.textBaseline = \"top\";\r\n    ctx.fillText(\"Genre Trends Over Time\", width / 2, 15);\r\n\r\n    // Draw axes\r\n    ctx.beginPath();\r\n    ctx.moveTo(padding.left, height - padding.bottom);\r\n    ctx.lineTo(width - padding.right, height - padding.bottom); // x-axis\r\n    ctx.moveTo(padding.left, padding.top);\r\n    ctx.lineTo(padding.left, height - padding.bottom); // y-axis\r\n    ctx.strokeStyle = \"rgba(205, 175, 115, 0.5)\";\r\n    ctx.lineWidth = 1;\r\n    ctx.stroke();\r\n\r\n    // Draw x-axis labels (years)\r\n    const barWidth = (chartWidth / genreTrendsData.length / 4) * 0.8; // 4 genres, 80% width\r\n    const groupWidth = chartWidth / genreTrendsData.length;\r\n    const barSpacing = barWidth * 0.2;\r\n\r\n    genreTrendsData.forEach((data, i) => {\r\n      const x = padding.left + i * groupWidth + groupWidth / 2;\r\n      ctx.font = \"12px var(--font-cormorant)\";\r\n      ctx.fillStyle = \"#cdaf73\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.textBaseline = \"top\";\r\n      ctx.fillText(data.year.toString(), x, height - padding.bottom + 15);\r\n    });\r\n\r\n    // Draw y-axis labels (percentages)\r\n    for (let i = 0; i <= 100; i += 20) {\r\n      const y = height - padding.bottom - (i / 100) * chartHeight;\r\n      ctx.font = \"10px var(--font-lora)\";\r\n      ctx.fillStyle = \"#a8a090\";\r\n      ctx.textAlign = \"right\";\r\n      ctx.textBaseline = \"middle\";\r\n      ctx.fillText(`${i}%`, padding.left - 10, y);\r\n\r\n      // Draw grid line\r\n      ctx.beginPath();\r\n      ctx.moveTo(padding.left, y);\r\n      ctx.lineTo(width - padding.right, y);\r\n      ctx.strokeStyle = \"rgba(205, 175, 115, 0.1)\";\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Define colors for each genre\r\n    const colors = {\r\n      fiction: \"rgba(205, 175, 115, 0.8)\",\r\n      nonFiction: \"rgba(150, 130, 85, 0.8)\",\r\n      mystery: \"rgba(100, 85, 55, 0.8)\",\r\n      sciFi: \"rgba(70, 60, 40, 0.8)\",\r\n    };\r\n\r\n    // Draw bars with animation\r\n    const currentAnimationProgress = animateChart ? 1 : 0;\r\n    const genres = [\"fiction\", \"nonFiction\", \"mystery\", \"sciFi\"];\r\n    const genreLabels = {\r\n      fiction: \"Fiction\",\r\n      nonFiction: \"Non-Fiction\",\r\n      mystery: \"Mystery\",\r\n      sciFi: \"Sci-Fi\",\r\n    };\r\n\r\n    genreTrendsData.forEach((data, i) => {\r\n      const groupX = padding.left + i * groupWidth;\r\n\r\n      genres.forEach((genre, j) => {\r\n        const value = data[genre];\r\n        // Apply animation to bar height\r\n        const barHeight =\r\n          (value / 100) * chartHeight * currentAnimationProgress;\r\n        const x = groupX + j * (barWidth + barSpacing) + groupWidth * 0.1;\r\n        const y = height - padding.bottom - barHeight;\r\n\r\n        // Draw bar\r\n        ctx.fillStyle =\r\n          hoveredBar === `${i}-${j}`\r\n            ? colors[genre].replace(\"0.8\", \"1\") // Darker on hover\r\n            : colors[genre];\r\n        ctx.fillRect(x, y, barWidth, barHeight);\r\n\r\n        // Draw value on top of bar if tall enough\r\n        if (barHeight > 20) {\r\n          ctx.font = \"10px var(--font-lora)\";\r\n          ctx.fillStyle = \"#e9e2d0\";\r\n          ctx.textAlign = \"center\";\r\n          ctx.textBaseline = \"bottom\";\r\n          ctx.fillText(value.toString(), x + barWidth / 2, y - 5);\r\n        }\r\n      });\r\n    });\r\n\r\n    // Draw legend\r\n    const legendX = padding.left;\r\n    const legendY = padding.top - 15;\r\n    const legendItemWidth = chartWidth / 4;\r\n\r\n    genres.forEach((genre, i) => {\r\n      const x = legendX + i * legendItemWidth;\r\n      const y = legendY;\r\n\r\n      // Draw color box\r\n      ctx.fillStyle = colors[genre];\r\n      ctx.fillRect(x, y, 10, 10);\r\n\r\n      // Draw label\r\n      ctx.font = \"12px var(--font-cormorant)\";\r\n      ctx.fillStyle = \"#cdaf73\";\r\n      ctx.textAlign = \"left\";\r\n      ctx.textBaseline = \"middle\";\r\n      ctx.fillText(genreLabels[genre], x + 15, y + 5);\r\n    });\r\n  }, [animateChart, hoveredBar, compact]); // Add compact as a dependency\r\n\r\n  // Function to draw the popularity chart\r\n  const drawPopularityChart = useCallback(() => {\r\n    if (!chartRef.current || !containerRef.current) return;\r\n\r\n    const canvas = chartRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    // Set canvas dimensions to match its display size\r\n    canvas.width = containerRef.current.clientWidth;\r\n    canvas.height = compact ? 320 : 400;\r\n\r\n    const width = canvas.width;\r\n    const height = canvas.height;\r\n    const padding = { top: 40, right: 30, bottom: 60, left: 150 };\r\n    const chartWidth = width - padding.left - padding.right;\r\n    const chartHeight = height - padding.top - padding.bottom;\r\n\r\n    // Clear canvas\r\n    ctx.clearRect(0, 0, width, height);\r\n\r\n    // Draw background\r\n    ctx.fillStyle = \"rgba(10, 31, 28, 0.5)\";\r\n    ctx.fillRect(0, 0, width, height);\r\n\r\n    // Draw title\r\n    ctx.font = \"16px var(--font-cormorant)\";\r\n    ctx.fillStyle = \"#cdaf73\";\r\n    ctx.textAlign = \"center\";\r\n    ctx.textBaseline = \"top\";\r\n    ctx.fillText(\"Most Popular Classic Books\", width / 2, 15);\r\n\r\n    // Draw axes\r\n    ctx.beginPath();\r\n    ctx.moveTo(padding.left, height - padding.bottom);\r\n    ctx.lineTo(width - padding.right, height - padding.bottom); // x-axis\r\n    ctx.moveTo(padding.left, padding.top);\r\n    ctx.lineTo(padding.left, height - padding.bottom); // y-axis\r\n    ctx.strokeStyle = \"rgba(205, 175, 115, 0.5)\";\r\n    ctx.lineWidth = 1;\r\n    ctx.stroke();\r\n\r\n    // Draw x-axis labels (scores)\r\n    for (let i = 0; i <= 100; i += 20) {\r\n      const x = padding.left + (i / 100) * chartWidth;\r\n      ctx.font = \"10px var(--font-lora)\";\r\n      ctx.fillStyle = \"#a8a090\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.textBaseline = \"top\";\r\n      ctx.fillText(i.toString(), x, height - padding.bottom + 15);\r\n\r\n      // Draw grid line\r\n      ctx.beginPath();\r\n      ctx.moveTo(x, padding.top);\r\n      ctx.lineTo(x, height - padding.bottom);\r\n      ctx.strokeStyle = \"rgba(205, 175, 115, 0.1)\";\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Calculate bar height and spacing\r\n    const barHeight = (chartHeight / popularityData.length) * 0.7;\r\n    const barSpacing = (chartHeight / popularityData.length) * 0.3;\r\n\r\n    // Draw bars with animation\r\n    const currentAnimationProgress = animateChart ? 1 : 0;\r\n\r\n    popularityData.forEach((book, i) => {\r\n      const y = padding.top + i * (barHeight + barSpacing);\r\n      const barWidth =\r\n        (book.score / 100) * chartWidth * currentAnimationProgress;\r\n\r\n      // Draw book title\r\n      ctx.font = \"12px var(--font-cormorant)\";\r\n      ctx.fillStyle = \"#cdaf73\";\r\n      ctx.textAlign = \"right\";\r\n      ctx.textBaseline = \"middle\";\r\n      ctx.fillText(book.title, padding.left - 10, y + barHeight / 2);\r\n\r\n      // Draw bar\r\n      const gradient = ctx.createLinearGradient(\r\n        padding.left,\r\n        0,\r\n        padding.left + barWidth,\r\n        0\r\n      );\r\n      gradient.addColorStop(0, \"rgba(205, 175, 115, 0.8)\");\r\n      gradient.addColorStop(1, \"rgba(205, 175, 115, 0.4)\");\r\n\r\n      ctx.fillStyle = hoveredBar === i ? \"rgba(205, 175, 115, 0.9)\" : gradient;\r\n      ctx.fillRect(padding.left, y, barWidth, barHeight);\r\n\r\n      // Draw score at end of bar\r\n      ctx.font = \"10px var(--font-lora)\";\r\n      ctx.fillStyle = \"#e9e2d0\";\r\n      ctx.textAlign = \"left\";\r\n      ctx.textBaseline = \"middle\";\r\n      ctx.fillText(\r\n        book.score.toString(),\r\n        padding.left + barWidth + 5,\r\n        y + barHeight / 2\r\n      );\r\n    });\r\n  }, [animateChart, hoveredBar, compact]); // Add compact as a dependency\r\n\r\n  // Effect to handle chart drawing and resizing\r\n  useEffect(() => {\r\n    const renderChart = () => {\r\n      // Trigger animation every time the chart is rendered (e.g., on tab change or resize)\r\n      setAnimateChart(false);\r\n      setTimeout(() => setAnimateChart(true), 100);\r\n\r\n      if (activeTab === \"genres\") {\r\n        drawGenreChart();\r\n      } else if (activeTab === \"popularity\") {\r\n        drawPopularityChart();\r\n      }\r\n    };\r\n\r\n    const handleResize = () => {\r\n      renderChart(); // Redraw chart on window resize\r\n    };\r\n\r\n    renderChart(); // Initial render\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, [activeTab, compact, drawGenreChart, drawPopularityChart]); // Dependencies for the effect\r\n\r\n  // Mouse move handler for tooltips and hover state\r\n  const handleMouseMove = (e) => {\r\n    if (!chartRef.current) return;\r\n\r\n    const rect = chartRef.current.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n\r\n    let newHoveredBar = null;\r\n    let newTooltip = null;\r\n\r\n    if (activeTab === \"genres\") {\r\n      const padding = { top: 40, right: 30, bottom: 60, left: 60 };\r\n      const chartWidth = chartRef.current.width - padding.left - padding.right;\r\n      const chartHeight =\r\n        chartRef.current.height - padding.top - padding.bottom;\r\n      const groupWidth = chartWidth / genreTrendsData.length;\r\n      const barWidth = (groupWidth / 4) * 0.8;\r\n      const barSpacing = barWidth * 0.2;\r\n      const genres = [\"fiction\", \"nonFiction\", \"mystery\", \"sciFi\"];\r\n      const genreLabels = {\r\n        fiction: \"Fiction\",\r\n        nonFiction: \"Non-Fiction\",\r\n        mystery: \"Mystery\",\r\n        sciFi: \"Sci-Fi\",\r\n      };\r\n\r\n      for (let i = 0; i < genreTrendsData.length; i++) {\r\n        const groupX = padding.left + i * groupWidth;\r\n        for (let j = 0; j < 4; j++) {\r\n          const barX = groupX + j * (barWidth + barSpacing) + groupWidth * 0.1;\r\n          const value =\r\n            genreTrendsData[i][\r\n              [\"fiction\", \"nonFiction\", \"mystery\", \"sciFi\"][j]\r\n            ];\r\n          const barHeight = (value / 100) * chartHeight;\r\n          const barY = chartRef.current.height - padding.bottom - barHeight;\r\n\r\n          if (\r\n            x >= barX &&\r\n            x <= barX + barWidth &&\r\n            y >= barY &&\r\n            y <= chartRef.current.height - padding.bottom\r\n          ) {\r\n            newHoveredBar = `${i}-${j}`;\r\n            newTooltip = {\r\n              x: e.clientX,\r\n              y: e.clientY,\r\n              content: `${genreLabels[genres[j]]}: ${value}% (${\r\n                genreTrendsData[i].year\r\n              })`,\r\n            };\r\n            break;\r\n          }\r\n        }\r\n        if (newHoveredBar) break;\r\n      }\r\n    } else if (activeTab === \"popularity\") {\r\n      const padding = { top: 40, right: 30, bottom: 60, left: 150 };\r\n      const chartWidth = chartRef.current.width - padding.left - padding.right;\r\n      const chartHeight =\r\n        chartRef.current.height - padding.top - padding.bottom;\r\n      const barHeight = (chartHeight / popularityData.length) * 0.7;\r\n      const barSpacing = (chartHeight / popularityData.length) * 0.3;\r\n\r\n      for (let i = 0; i < popularityData.length; i++) {\r\n        const barY = padding.top + i * (barHeight + barSpacing);\r\n        const barWidth = (popularityData[i].score / 100) * chartWidth;\r\n\r\n        if (\r\n          x >= padding.left &&\r\n          x <= padding.left + barWidth &&\r\n          y >= barY &&\r\n          y <= barY + barHeight\r\n        ) {\r\n          newHoveredBar = i;\r\n          newTooltip = {\r\n            x: e.clientX,\r\n            y: e.clientY,\r\n            content: `${popularityData[i].title}: ${popularityData[i].score}`,\r\n          };\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    setHoveredBar(newHoveredBar);\r\n    setTooltip(newTooltip);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredBar(null);\r\n    setTooltip(null);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"book-trends-section mb-5\"\r\n      ref={containerRef} // Attach ref to the container\r\n      style={{\r\n        border: \"1px solid rgba(205, 175, 115, 0.2)\",\r\n        background: \"rgba(10, 31, 28, 0.5)\",\r\n        position: \"relative\", // Needed for tooltip positioning\r\n      }}\r\n    >\r\n      <div className=\"section-header text-center p-3\">\r\n        <h3\r\n          className=\"font-heading mb-2\"\r\n          style={{\r\n            color: \"#cdaf73\",\r\n            fontWeight: \"300\",\r\n            letterSpacing: \"0.2em\",\r\n            fontSize: compact ? \"1.5rem\" : \"1.8rem\",\r\n          }}\r\n        >\r\n          Genre & Popularity Analysis\r\n        </h3>\r\n        <div className=\"decorative-line mx-auto mb-3\"></div>\r\n        <p\r\n          className=\"mx-auto\"\r\n          style={{\r\n            maxWidth: \"600px\",\r\n            color: \"#a8a090\",\r\n            letterSpacing: \"0.05em\",\r\n            fontSize: compact ? \"0.85rem\" : \"0.95rem\",\r\n            fontWeight: \"300\",\r\n            lineHeight: \"1.7\",\r\n          }}\r\n        >\r\n          Discover the evolving landscape of literary genres and the enduring\r\n          impact of classic works\r\n        </p>\r\n      </div>\r\n\r\n      <div\r\n        className=\"trends-tabs d-flex border-top border-bottom\"\r\n        style={{\r\n          borderColor: \"rgba(205, 175, 115, 0.2)\",\r\n          position: \"relative\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        {/* Add a subtle glow effect */}\r\n        <div\r\n          className=\"tab-glow\"\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"25%\",\r\n            width: \"50%\",\r\n            height: \"1px\",\r\n            background:\r\n              \"linear-gradient(90deg, rgba(205, 175, 115, 0), rgba(205, 175, 115, 0.3), rgba(205, 175, 115, 0))\",\r\n            zIndex: 0,\r\n          }}\r\n        ></div>\r\n        <Button\r\n          variant=\"link\"\r\n          className={`tab-button flex-grow-1 py-2 ${\r\n            activeTab === \"genres\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setActiveTab(\"genres\")}\r\n          style={{\r\n            color: activeTab === \"genres\" ? \"#cdaf73\" : \"#a8a090\",\r\n            textDecoration: \"none\",\r\n            borderBottom: activeTab === \"genres\" ? \"2px solid #cdaf73\" : \"none\",\r\n            borderRadius: 0,\r\n            fontFamily: \"var(--font-cormorant)\",\r\n            letterSpacing: \"0.1em\",\r\n          }}\r\n        >\r\n          Genre Trends\r\n        </Button>\r\n        <Button\r\n          variant=\"link\"\r\n          className={`tab-button flex-grow-1 py-2 ${\r\n            activeTab === \"popularity\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setActiveTab(\"popularity\")}\r\n          style={{\r\n            color: activeTab === \"popularity\" ? \"#cdaf73\" : \"#a8a090\",\r\n            textDecoration: \"none\",\r\n            borderBottom:\r\n              activeTab === \"popularity\" ? \"2px solid #cdaf73\" : \"none\",\r\n            borderRadius: 0,\r\n            fontFamily: \"var(--font-cormorant)\",\r\n            letterSpacing: \"0.1em\",\r\n          }}\r\n        >\r\n          Popularity Rankings\r\n        </Button>\r\n      </div>\r\n\r\n      <div\r\n        className=\"chart-container p-3\"\r\n        ref={containerRef} // Attach ref to the container\r\n        style={{\r\n          height: compact ? \"320px\" : \"400px\",\r\n          position: \"relative\", // Ensure relative positioning for tooltip\r\n        }}\r\n      >\r\n        <canvas\r\n          ref={chartRef}\r\n          // Width and Height are now set dynamically in useEffect and useCallback\r\n          // Initial values are just placeholders for the component's first render\r\n          width={600}\r\n          height={400}\r\n          style={{ width: \"100%\", height: \"100%\" }} // Make canvas fill its container\r\n          onMouseMove={handleMouseMove}\r\n          onMouseLeave={handleMouseLeave}\r\n        />\r\n\r\n        {tooltip && (\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              left:\r\n                tooltip.x -\r\n                (containerRef.current?.getBoundingClientRect().left || 0) +\r\n                10, // Adjust for container's position\r\n              top:\r\n                tooltip.y -\r\n                (containerRef.current?.getBoundingClientRect().top || 0) +\r\n                10, // Adjust for container's position\r\n              backgroundColor: \"rgba(0, 0, 0, 0.8)\",\r\n              color: \"#e9e2d0\",\r\n              padding: \"5px 10px\",\r\n              borderRadius: \"4px\",\r\n              fontSize: \"0.8rem\",\r\n              pointerEvents: \"none\", // Ensures it doesn't block mouse events on canvas\r\n              zIndex: 1000,\r\n              boxShadow: \"0 2px 5px rgba(0,0,0,0.3)\",\r\n              fontFamily: \"var(--font-lora)\",\r\n            }}\r\n          >\r\n            {tooltip.content}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"chart-description p-3 text-center\">\r\n        <p\r\n          style={{\r\n            color: \"#a8a090\",\r\n            fontSize: compact ? \"0.8rem\" : \"0.9rem\",\r\n            fontStyle: \"italic\",\r\n            maxWidth: \"600px\",\r\n            margin: \"0 auto\",\r\n          }}\r\n        >\r\n          {activeTab === \"genres\"\r\n            ? \"This visualization shows the shifting popularity of literary genres over the past five years, with non-fiction steadily gaining ground while traditional fiction sees a gradual decline.\"\r\n            : \"Based on reader ratings and critical acclaim, these classic works continue to resonate with audiences across generations, maintaining their literary significance.\"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookTrendsVisualization;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}