{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sinch\\\\.vscode\\\\Projects\\\\AI-Powered-Book-Summarizer\\\\client\\\\src\\\\components\\\\book-trends-visualization.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\n// Sample data for book trends\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genreTrendsData = [{\n  year: 2019,\n  fiction: 45,\n  nonFiction: 30,\n  mystery: 15,\n  sciFi: 10\n}, {\n  year: 2020,\n  fiction: 40,\n  nonFiction: 35,\n  mystery: 15,\n  sciFi: 10\n}, {\n  year: 2021,\n  fiction: 38,\n  nonFiction: 37,\n  mystery: 12,\n  sciFi: 13\n}, {\n  year: 2022,\n  fiction: 35,\n  nonFiction: 40,\n  mystery: 10,\n  sciFi: 15\n}, {\n  year: 2023,\n  fiction: 32,\n  nonFiction: 42,\n  mystery: 8,\n  sciFi: 18\n}];\nconst popularityData = [{\n  title: \"To Kill a Mockingbird\",\n  score: 95\n}, {\n  title: \"1984\",\n  score: 92\n}, {\n  title: \"Pride and Prejudice\",\n  score: 88\n}, {\n  title: \"The Great Gatsby\",\n  score: 85\n}, {\n  title: \"The Catcher in the Rye\",\n  score: 82\n}];\nconst BookTrendsVisualization = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"genres\");\n  const [hoveredBar, setHoveredBar] = useState(null);\n  const [animateChart, setAnimateChart] = useState(false);\n  const chartRef = useRef(null);\n  useEffect(() => {\n    // Trigger animation when component mounts or tab changes\n    setAnimateChart(false);\n    setTimeout(() => setAnimateChart(true), 100);\n    if (activeTab === \"genres\") {\n      drawGenreChart();\n    } else if (activeTab === \"popularity\") {\n      drawPopularityChart();\n    }\n  }, [activeTab]);\n  const drawGenreChart = () => {\n    if (!chartRef.current) return;\n    const canvas = chartRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const width = canvas.width;\n    const height = canvas.height;\n    const padding = {\n      top: 40,\n      right: 30,\n      bottom: 60,\n      left: 60\n    };\n    const chartWidth = width - padding.left - padding.right;\n    const chartHeight = height - padding.top - padding.bottom;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Draw background\n    ctx.fillStyle = \"rgba(10, 31, 28, 0.5)\";\n    ctx.fillRect(0, 0, width, height);\n\n    // Draw title\n    ctx.font = \"16px var(--font-cormorant)\";\n    ctx.fillStyle = \"#cdaf73\";\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"top\";\n    ctx.fillText(\"Genre Trends Over Time\", width / 2, 15);\n\n    // Draw axes\n    ctx.beginPath();\n    ctx.moveTo(padding.left, height - padding.bottom);\n    ctx.lineTo(width - padding.right, height - padding.bottom); // x-axis\n    ctx.moveTo(padding.left, padding.top);\n    ctx.lineTo(padding.left, height - padding.bottom); // y-axis\n    ctx.strokeStyle = \"rgba(205, 175, 115, 0.5)\";\n    ctx.lineWidth = 1;\n    ctx.stroke();\n\n    // Draw x-axis labels (years)\n    const barWidth = chartWidth / genreTrendsData.length / 4 * 0.8; // 4 genres, 80% width\n    const groupWidth = chartWidth / genreTrendsData.length;\n    const barSpacing = barWidth * 0.2;\n    genreTrendsData.forEach((data, i) => {\n      const x = padding.left + i * groupWidth + groupWidth / 2;\n      ctx.font = \"12px var(--font-cormorant)\";\n      ctx.fillStyle = \"#cdaf73\";\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"top\";\n      ctx.fillText(data.year.toString(), x, height - padding.bottom + 15);\n    });\n\n    // Draw y-axis labels (percentages)\n    for (let i = 0; i <= 100; i += 20) {\n      const y = height - padding.bottom - i / 100 * chartHeight;\n      ctx.font = \"10px var(--font-lora)\";\n      ctx.fillStyle = \"#a8a090\";\n      ctx.textAlign = \"right\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillText(`${i}%`, padding.left - 10, y);\n\n      // Draw grid line\n      ctx.beginPath();\n      ctx.moveTo(padding.left, y);\n      ctx.lineTo(width - padding.right, y);\n      ctx.strokeStyle = \"rgba(205, 175, 115, 0.1)\";\n      ctx.stroke();\n    }\n\n    // Define colors for each genre\n    const colors = {\n      fiction: \"rgba(205, 175, 115, 0.8)\",\n      nonFiction: \"rgba(150, 130, 85, 0.8)\",\n      mystery: \"rgba(100, 85, 55, 0.8)\",\n      sciFi: \"rgba(70, 60, 40, 0.8)\"\n    };\n\n    // Draw bars with animation\n    const animationProgress = animateChart ? 1 : 0;\n    const genres = [\"fiction\", \"nonFiction\", \"mystery\", \"sciFi\"];\n    const genreLabels = {\n      fiction: \"Fiction\",\n      nonFiction: \"Non-Fiction\",\n      mystery: \"Mystery\",\n      sciFi: \"Sci-Fi\"\n    };\n    genreTrendsData.forEach((data, i) => {\n      const groupX = padding.left + i * groupWidth;\n      genres.forEach((genre, j) => {\n        const value = data[genre];\n        const barHeight = value / 100 * chartHeight * animationProgress;\n        const x = groupX + j * (barWidth + barSpacing) + groupWidth * 0.1;\n        const y = height - padding.bottom - barHeight;\n\n        // Draw bar\n        ctx.fillStyle = hoveredBar === `${i}-${j}` ? colors[genre].replace(\"0.8\", \"1\") : colors[genre];\n        ctx.fillRect(x, y, barWidth, barHeight);\n\n        // Draw value on top of bar if tall enough\n        if (barHeight > 20) {\n          ctx.font = \"10px var(--font-lora)\";\n          ctx.fillStyle = \"#e9e2d0\";\n          ctx.textAlign = \"center\";\n          ctx.textBaseline = \"bottom\";\n          ctx.fillText(value.toString(), x + barWidth / 2, y - 5);\n        }\n      });\n    });\n\n    // Draw legend\n    const legendX = padding.left;\n    const legendY = padding.top - 15;\n    const legendItemWidth = chartWidth / 4;\n    genres.forEach((genre, i) => {\n      const x = legendX + i * legendItemWidth;\n      const y = legendY;\n\n      // Draw color box\n      ctx.fillStyle = colors[genre];\n      ctx.fillRect(x, y, 10, 10);\n\n      // Draw label\n      ctx.font = \"12px var(--font-cormorant)\";\n      ctx.fillStyle = \"#cdaf73\";\n      ctx.textAlign = \"left\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillText(genreLabels[genre], x + 15, y + 5);\n    });\n  };\n  const drawPopularityChart = () => {\n    if (!chartRef.current) return;\n    const canvas = chartRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const width = canvas.width;\n    const height = canvas.height;\n    const padding = {\n      top: 40,\n      right: 30,\n      bottom: 60,\n      left: 150\n    };\n    const chartWidth = width - padding.left - padding.right;\n    const chartHeight = height - padding.top - padding.bottom;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Draw background\n    ctx.fillStyle = \"rgba(10, 31, 28, 0.5)\";\n    ctx.fillRect(0, 0, width, height);\n\n    // Draw title\n    ctx.font = \"16px var(--font-cormorant)\";\n    ctx.fillStyle = \"#cdaf73\";\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"top\";\n    ctx.fillText(\"Most Popular Classic Books\", width / 2, 15);\n\n    // Draw axes\n    ctx.beginPath();\n    ctx.moveTo(padding.left, height - padding.bottom);\n    ctx.lineTo(width - padding.right, height - padding.bottom); // x-axis\n    ctx.moveTo(padding.left, padding.top);\n    ctx.lineTo(padding.left, height - padding.bottom); // y-axis\n    ctx.strokeStyle = \"rgba(205, 175, 115, 0.5)\";\n    ctx.lineWidth = 1;\n    ctx.stroke();\n\n    // Draw x-axis labels (scores)\n    for (let i = 0; i <= 100; i += 20) {\n      const x = padding.left + i / 100 * chartWidth;\n      ctx.font = \"10px var(--font-lora)\";\n      ctx.fillStyle = \"#a8a090\";\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"top\";\n      ctx.fillText(i.toString(), x, height - padding.bottom + 15);\n\n      // Draw grid line\n      ctx.beginPath();\n      ctx.moveTo(x, padding.top);\n      ctx.lineTo(x, height - padding.bottom);\n      ctx.strokeStyle = \"rgba(205, 175, 115, 0.1)\";\n      ctx.stroke();\n    }\n\n    // Calculate bar height and spacing\n    const barHeight = chartHeight / popularityData.length * 0.7;\n    const barSpacing = chartHeight / popularityData.length * 0.3;\n\n    // Draw bars with animation\n    const animationProgress = animateChart ? 1 : 0;\n    popularityData.forEach((book, i) => {\n      const y = padding.top + i * (barHeight + barSpacing);\n      const barWidth = book.score / 100 * chartWidth * animationProgress;\n\n      // Draw book title\n      ctx.font = \"12px var(--font-cormorant)\";\n      ctx.fillStyle = \"#cdaf73\";\n      ctx.textAlign = \"right\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillText(book.title, padding.left - 10, y + barHeight / 2);\n\n      // Draw bar\n      const gradient = ctx.createLinearGradient(padding.left, 0, padding.left + barWidth, 0);\n      gradient.addColorStop(0, \"rgba(205, 175, 115, 0.8)\");\n      gradient.addColorStop(1, \"rgba(205, 175, 115, 0.4)\");\n      ctx.fillStyle = hoveredBar === i ? \"rgba(205, 175, 115, 0.9)\" : gradient;\n      ctx.fillRect(padding.left, y, barWidth, barHeight);\n\n      // Draw score at end of bar\n      ctx.font = \"10px var(--font-lora)\";\n      ctx.fillStyle = \"#e9e2d0\";\n      ctx.textAlign = \"left\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillText(book.score.toString(), padding.left + barWidth + 5, y + barHeight / 2);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-trends-section mb-5\",\n    style: {\n      border: \"1px solid rgba(205, 175, 115, 0.2)\",\n      background: \"rgba(10, 31, 28, 0.5)\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header text-center p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-heading mb-3\",\n        style: {\n          color: \"#cdaf73\",\n          fontWeight: \"300\",\n          letterSpacing: \"0.2em\",\n          fontSize: \"1.8rem\"\n        },\n        children: \"Literary Insights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"decorative-line mx-auto mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mx-auto\",\n        style: {\n          maxWidth: \"600px\",\n          color: \"#a8a090\",\n          letterSpacing: \"0.05em\",\n          fontSize: \"0.9rem\",\n          fontWeight: \"300\"\n        },\n        children: \"Explore trends and patterns in the world of literature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trends-tabs d-flex border-top border-bottom\",\n      style: {\n        borderColor: \"rgba(205, 175, 115, 0.2)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"link\",\n        className: `tab-button flex-grow-1 py-2 ${activeTab === \"genres\" ? \"active\" : \"\"}`,\n        onClick: () => setActiveTab(\"genres\"),\n        style: {\n          color: activeTab === \"genres\" ? \"#cdaf73\" : \"#a8a090\",\n          textDecoration: \"none\",\n          borderBottom: activeTab === \"genres\" ? \"2px solid #cdaf73\" : \"none\",\n          borderRadius: 0,\n          fontFamily: \"var(--font-cormorant)\",\n          letterSpacing: \"0.1em\"\n        },\n        children: \"Genre Trends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"link\",\n        className: `tab-button flex-grow-1 py-2 ${activeTab === \"popularity\" ? \"active\" : \"\"}`,\n        onClick: () => setActiveTab(\"popularity\"),\n        style: {\n          color: activeTab === \"popularity\" ? \"#cdaf73\" : \"#a8a090\",\n          textDecoration: \"none\",\n          borderBottom: activeTab === \"popularity\" ? \"2px solid #cdaf73\" : \"none\",\n          borderRadius: 0,\n          fontFamily: \"var(--font-cormorant)\",\n          letterSpacing: \"0.1em\"\n        },\n        children: \"Popularity Rankings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef,\n        width: 600,\n        height: 400,\n        style: {\n          width: \"100%\",\n          height: \"auto\"\n        },\n        onMouseMove: e => {\n          const rect = chartRef.current.getBoundingClientRect();\n          const x = e.clientX - rect.left;\n          const y = e.clientY - rect.top;\n          if (activeTab === \"genres\") {\n            // Handle hover for genre chart\n            const padding = {\n              top: 40,\n              right: 30,\n              bottom: 60,\n              left: 60\n            };\n            const chartWidth = chartRef.current.width - padding.left - padding.right;\n            const chartHeight = chartRef.current.height - padding.top - padding.bottom;\n            const groupWidth = chartWidth / genreTrendsData.length;\n            const barWidth = groupWidth / 4 * 0.8;\n            const barSpacing = barWidth * 0.2;\n            for (let i = 0; i < genreTrendsData.length; i++) {\n              const groupX = padding.left + i * groupWidth;\n              for (let j = 0; j < 4; j++) {\n                const barX = groupX + j * (barWidth + barSpacing) + groupWidth * 0.1;\n                const value = genreTrendsData[i][[\"fiction\", \"nonFiction\", \"mystery\", \"sciFi\"][j]];\n                const barHeight = value / 100 * chartHeight;\n                const barY = chartRef.current.height - padding.bottom - barHeight;\n                if (x >= barX && x <= barX + barWidth && y >= barY && y <= chartRef.current.height - padding.bottom) {\n                  setHoveredBar(`${i}-${j}`);\n                  return;\n                }\n              }\n            }\n          } else if (activeTab === \"popularity\") {\n            // Handle hover for popularity chart\n            const padding = {\n              top: 40,\n              right: 30,\n              bottom: 60,\n              left: 150\n            };\n            const chartWidth = chartRef.current.width - padding.left - padding.right;\n            const chartHeight = chartRef.current.height - padding.top - padding.bottom;\n            const barHeight = chartHeight / popularityData.length * 0.7;\n            const barSpacing = chartHeight / popularityData.length * 0.3;\n            for (let i = 0; i < popularityData.length; i++) {\n              const barY = padding.top + i * (barHeight + barSpacing);\n              const barWidth = popularityData[i].score / 100 * chartWidth;\n              if (x >= padding.left && x <= padding.left + barWidth && y >= barY && y <= barY + barHeight) {\n                setHoveredBar(i);\n                return;\n              }\n            }\n          }\n          setHoveredBar(null);\n        },\n        onMouseLeave: () => setHoveredBar(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-description p-4 text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"#a8a090\",\n          fontSize: \"0.9rem\",\n          fontStyle: \"italic\",\n          maxWidth: \"600px\",\n          margin: \"0 auto\"\n        },\n        children: activeTab === \"genres\" ? \"This visualization shows the shifting popularity of literary genres over the past five years, with non-fiction steadily gaining ground while traditional fiction sees a gradual decline.\" : \"Based on reader ratings and critical acclaim, these classic works continue to resonate with audiences across generations, maintaining their literary significance.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n};\n_s(BookTrendsVisualization, \"GnOWcsho/osLZ6wLKzl8Ec6p+GM=\");\n_c = BookTrendsVisualization;\nexport default BookTrendsVisualization;\nvar _c;\n$RefreshReg$(_c, \"BookTrendsVisualization\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","useRef","Button","jsxDEV","_jsxDEV","genreTrendsData","year","fiction","nonFiction","mystery","sciFi","popularityData","title","score","BookTrendsVisualization","activeTab","setActiveTab","hoveredBar","setHoveredBar","animateChart","setAnimateChart","chartRef","setTimeout","drawGenreChart","drawPopularityChart","current","canvas","ctx","getContext","width","height","padding","top","right","bottom","left","chartWidth","chartHeight","clearRect","fillStyle","fillRect","font","textAlign","textBaseline","fillText","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","barWidth","length","groupWidth","barSpacing","forEach","data","i","x","toString","y","colors","animationProgress","genres","genreLabels","groupX","genre","j","value","barHeight","replace","legendX","legendY","legendItemWidth","book","gradient","createLinearGradient","addColorStop","className","style","border","background","children","color","fontWeight","letterSpacing","fontSize","fileName","lineNumber","columnNumber","maxWidth","borderColor","variant","onClick","textDecoration","borderBottom","borderRadius","fontFamily","ref","onMouseMove","e","rect","getBoundingClientRect","clientX","clientY","barX","barY","onMouseLeave","fontStyle","margin","_c","$RefreshReg$"],"sources":["C:/Users/sinch/.vscode/Projects/AI-Powered-Book-Summarizer/client/src/components/book-trends-visualization.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n// Sample data for book trends\r\nconst genreTrendsData = [\r\n  { year: 2019, fiction: 45, nonFiction: 30, mystery: 15, sciFi: 10 },\r\n  { year: 2020, fiction: 40, nonFiction: 35, mystery: 15, sciFi: 10 },\r\n  { year: 2021, fiction: 38, nonFiction: 37, mystery: 12, sciFi: 13 },\r\n  { year: 2022, fiction: 35, nonFiction: 40, mystery: 10, sciFi: 15 },\r\n  { year: 2023, fiction: 32, nonFiction: 42, mystery: 8, sciFi: 18 },\r\n];\r\n\r\nconst popularityData = [\r\n  { title: \"To Kill a Mockingbird\", score: 95 },\r\n  { title: \"1984\", score: 92 },\r\n  { title: \"Pride and Prejudice\", score: 88 },\r\n  { title: \"The Great Gatsby\", score: 85 },\r\n  { title: \"The Catcher in the Rye\", score: 82 },\r\n];\r\n\r\nconst BookTrendsVisualization = () => {\r\n  const [activeTab, setActiveTab] = useState(\"genres\");\r\n  const [hoveredBar, setHoveredBar] = useState(null);\r\n  const [animateChart, setAnimateChart] = useState(false);\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Trigger animation when component mounts or tab changes\r\n    setAnimateChart(false);\r\n    setTimeout(() => setAnimateChart(true), 100);\r\n\r\n    if (activeTab === \"genres\") {\r\n      drawGenreChart();\r\n    } else if (activeTab === \"popularity\") {\r\n      drawPopularityChart();\r\n    }\r\n  }, [activeTab]);\r\n\r\n  const drawGenreChart = () => {\r\n    if (!chartRef.current) return;\r\n\r\n    const canvas = chartRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const width = canvas.width;\r\n    const height = canvas.height;\r\n    const padding = { top: 40, right: 30, bottom: 60, left: 60 };\r\n    const chartWidth = width - padding.left - padding.right;\r\n    const chartHeight = height - padding.top - padding.bottom;\r\n\r\n    // Clear canvas\r\n    ctx.clearRect(0, 0, width, height);\r\n\r\n    // Draw background\r\n    ctx.fillStyle = \"rgba(10, 31, 28, 0.5)\";\r\n    ctx.fillRect(0, 0, width, height);\r\n\r\n    // Draw title\r\n    ctx.font = \"16px var(--font-cormorant)\";\r\n    ctx.fillStyle = \"#cdaf73\";\r\n    ctx.textAlign = \"center\";\r\n    ctx.textBaseline = \"top\";\r\n    ctx.fillText(\"Genre Trends Over Time\", width / 2, 15);\r\n\r\n    // Draw axes\r\n    ctx.beginPath();\r\n    ctx.moveTo(padding.left, height - padding.bottom);\r\n    ctx.lineTo(width - padding.right, height - padding.bottom); // x-axis\r\n    ctx.moveTo(padding.left, padding.top);\r\n    ctx.lineTo(padding.left, height - padding.bottom); // y-axis\r\n    ctx.strokeStyle = \"rgba(205, 175, 115, 0.5)\";\r\n    ctx.lineWidth = 1;\r\n    ctx.stroke();\r\n\r\n    // Draw x-axis labels (years)\r\n    const barWidth = (chartWidth / genreTrendsData.length / 4) * 0.8; // 4 genres, 80% width\r\n    const groupWidth = chartWidth / genreTrendsData.length;\r\n    const barSpacing = barWidth * 0.2;\r\n\r\n    genreTrendsData.forEach((data, i) => {\r\n      const x = padding.left + i * groupWidth + groupWidth / 2;\r\n      ctx.font = \"12px var(--font-cormorant)\";\r\n      ctx.fillStyle = \"#cdaf73\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.textBaseline = \"top\";\r\n      ctx.fillText(data.year.toString(), x, height - padding.bottom + 15);\r\n    });\r\n\r\n    // Draw y-axis labels (percentages)\r\n    for (let i = 0; i <= 100; i += 20) {\r\n      const y = height - padding.bottom - (i / 100) * chartHeight;\r\n      ctx.font = \"10px var(--font-lora)\";\r\n      ctx.fillStyle = \"#a8a090\";\r\n      ctx.textAlign = \"right\";\r\n      ctx.textBaseline = \"middle\";\r\n      ctx.fillText(`${i}%`, padding.left - 10, y);\r\n\r\n      // Draw grid line\r\n      ctx.beginPath();\r\n      ctx.moveTo(padding.left, y);\r\n      ctx.lineTo(width - padding.right, y);\r\n      ctx.strokeStyle = \"rgba(205, 175, 115, 0.1)\";\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Define colors for each genre\r\n    const colors = {\r\n      fiction: \"rgba(205, 175, 115, 0.8)\",\r\n      nonFiction: \"rgba(150, 130, 85, 0.8)\",\r\n      mystery: \"rgba(100, 85, 55, 0.8)\",\r\n      sciFi: \"rgba(70, 60, 40, 0.8)\",\r\n    };\r\n\r\n    // Draw bars with animation\r\n    const animationProgress = animateChart ? 1 : 0;\r\n    const genres = [\"fiction\", \"nonFiction\", \"mystery\", \"sciFi\"];\r\n    const genreLabels = {\r\n      fiction: \"Fiction\",\r\n      nonFiction: \"Non-Fiction\",\r\n      mystery: \"Mystery\",\r\n      sciFi: \"Sci-Fi\",\r\n    };\r\n\r\n    genreTrendsData.forEach((data, i) => {\r\n      const groupX = padding.left + i * groupWidth;\r\n\r\n      genres.forEach((genre, j) => {\r\n        const value = data[genre];\r\n        const barHeight = (value / 100) * chartHeight * animationProgress;\r\n        const x = groupX + j * (barWidth + barSpacing) + groupWidth * 0.1;\r\n        const y = height - padding.bottom - barHeight;\r\n\r\n        // Draw bar\r\n        ctx.fillStyle =\r\n          hoveredBar === `${i}-${j}`\r\n            ? colors[genre].replace(\"0.8\", \"1\")\r\n            : colors[genre];\r\n        ctx.fillRect(x, y, barWidth, barHeight);\r\n\r\n        // Draw value on top of bar if tall enough\r\n        if (barHeight > 20) {\r\n          ctx.font = \"10px var(--font-lora)\";\r\n          ctx.fillStyle = \"#e9e2d0\";\r\n          ctx.textAlign = \"center\";\r\n          ctx.textBaseline = \"bottom\";\r\n          ctx.fillText(value.toString(), x + barWidth / 2, y - 5);\r\n        }\r\n      });\r\n    });\r\n\r\n    // Draw legend\r\n    const legendX = padding.left;\r\n    const legendY = padding.top - 15;\r\n    const legendItemWidth = chartWidth / 4;\r\n\r\n    genres.forEach((genre, i) => {\r\n      const x = legendX + i * legendItemWidth;\r\n      const y = legendY;\r\n\r\n      // Draw color box\r\n      ctx.fillStyle = colors[genre];\r\n      ctx.fillRect(x, y, 10, 10);\r\n\r\n      // Draw label\r\n      ctx.font = \"12px var(--font-cormorant)\";\r\n      ctx.fillStyle = \"#cdaf73\";\r\n      ctx.textAlign = \"left\";\r\n      ctx.textBaseline = \"middle\";\r\n      ctx.fillText(genreLabels[genre], x + 15, y + 5);\r\n    });\r\n  };\r\n\r\n  const drawPopularityChart = () => {\r\n    if (!chartRef.current) return;\r\n\r\n    const canvas = chartRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const width = canvas.width;\r\n    const height = canvas.height;\r\n    const padding = { top: 40, right: 30, bottom: 60, left: 150 };\r\n    const chartWidth = width - padding.left - padding.right;\r\n    const chartHeight = height - padding.top - padding.bottom;\r\n\r\n    // Clear canvas\r\n    ctx.clearRect(0, 0, width, height);\r\n\r\n    // Draw background\r\n    ctx.fillStyle = \"rgba(10, 31, 28, 0.5)\";\r\n    ctx.fillRect(0, 0, width, height);\r\n\r\n    // Draw title\r\n    ctx.font = \"16px var(--font-cormorant)\";\r\n    ctx.fillStyle = \"#cdaf73\";\r\n    ctx.textAlign = \"center\";\r\n    ctx.textBaseline = \"top\";\r\n    ctx.fillText(\"Most Popular Classic Books\", width / 2, 15);\r\n\r\n    // Draw axes\r\n    ctx.beginPath();\r\n    ctx.moveTo(padding.left, height - padding.bottom);\r\n    ctx.lineTo(width - padding.right, height - padding.bottom); // x-axis\r\n    ctx.moveTo(padding.left, padding.top);\r\n    ctx.lineTo(padding.left, height - padding.bottom); // y-axis\r\n    ctx.strokeStyle = \"rgba(205, 175, 115, 0.5)\";\r\n    ctx.lineWidth = 1;\r\n    ctx.stroke();\r\n\r\n    // Draw x-axis labels (scores)\r\n    for (let i = 0; i <= 100; i += 20) {\r\n      const x = padding.left + (i / 100) * chartWidth;\r\n      ctx.font = \"10px var(--font-lora)\";\r\n      ctx.fillStyle = \"#a8a090\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.textBaseline = \"top\";\r\n      ctx.fillText(i.toString(), x, height - padding.bottom + 15);\r\n\r\n      // Draw grid line\r\n      ctx.beginPath();\r\n      ctx.moveTo(x, padding.top);\r\n      ctx.lineTo(x, height - padding.bottom);\r\n      ctx.strokeStyle = \"rgba(205, 175, 115, 0.1)\";\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Calculate bar height and spacing\r\n    const barHeight = (chartHeight / popularityData.length) * 0.7;\r\n    const barSpacing = (chartHeight / popularityData.length) * 0.3;\r\n\r\n    // Draw bars with animation\r\n    const animationProgress = animateChart ? 1 : 0;\r\n\r\n    popularityData.forEach((book, i) => {\r\n      const y = padding.top + i * (barHeight + barSpacing);\r\n      const barWidth = (book.score / 100) * chartWidth * animationProgress;\r\n\r\n      // Draw book title\r\n      ctx.font = \"12px var(--font-cormorant)\";\r\n      ctx.fillStyle = \"#cdaf73\";\r\n      ctx.textAlign = \"right\";\r\n      ctx.textBaseline = \"middle\";\r\n      ctx.fillText(book.title, padding.left - 10, y + barHeight / 2);\r\n\r\n      // Draw bar\r\n      const gradient = ctx.createLinearGradient(\r\n        padding.left,\r\n        0,\r\n        padding.left + barWidth,\r\n        0\r\n      );\r\n      gradient.addColorStop(0, \"rgba(205, 175, 115, 0.8)\");\r\n      gradient.addColorStop(1, \"rgba(205, 175, 115, 0.4)\");\r\n\r\n      ctx.fillStyle = hoveredBar === i ? \"rgba(205, 175, 115, 0.9)\" : gradient;\r\n      ctx.fillRect(padding.left, y, barWidth, barHeight);\r\n\r\n      // Draw score at end of bar\r\n      ctx.font = \"10px var(--font-lora)\";\r\n      ctx.fillStyle = \"#e9e2d0\";\r\n      ctx.textAlign = \"left\";\r\n      ctx.textBaseline = \"middle\";\r\n      ctx.fillText(\r\n        book.score.toString(),\r\n        padding.left + barWidth + 5,\r\n        y + barHeight / 2\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"book-trends-section mb-5\"\r\n      style={{\r\n        border: \"1px solid rgba(205, 175, 115, 0.2)\",\r\n        background: \"rgba(10, 31, 28, 0.5)\",\r\n      }}\r\n    >\r\n      <div className=\"section-header text-center p-4\">\r\n        <h2\r\n          className=\"font-heading mb-3\"\r\n          style={{\r\n            color: \"#cdaf73\",\r\n            fontWeight: \"300\",\r\n            letterSpacing: \"0.2em\",\r\n            fontSize: \"1.8rem\",\r\n          }}\r\n        >\r\n          Literary Insights\r\n        </h2>\r\n        <div className=\"decorative-line mx-auto mb-4\"></div>\r\n        <p\r\n          className=\"mx-auto\"\r\n          style={{\r\n            maxWidth: \"600px\",\r\n            color: \"#a8a090\",\r\n            letterSpacing: \"0.05em\",\r\n            fontSize: \"0.9rem\",\r\n            fontWeight: \"300\",\r\n          }}\r\n        >\r\n          Explore trends and patterns in the world of literature\r\n        </p>\r\n      </div>\r\n\r\n      <div\r\n        className=\"trends-tabs d-flex border-top border-bottom\"\r\n        style={{ borderColor: \"rgba(205, 175, 115, 0.2)\" }}\r\n      >\r\n        <Button\r\n          variant=\"link\"\r\n          className={`tab-button flex-grow-1 py-2 ${\r\n            activeTab === \"genres\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setActiveTab(\"genres\")}\r\n          style={{\r\n            color: activeTab === \"genres\" ? \"#cdaf73\" : \"#a8a090\",\r\n            textDecoration: \"none\",\r\n            borderBottom: activeTab === \"genres\" ? \"2px solid #cdaf73\" : \"none\",\r\n            borderRadius: 0,\r\n            fontFamily: \"var(--font-cormorant)\",\r\n            letterSpacing: \"0.1em\",\r\n          }}\r\n        >\r\n          Genre Trends\r\n        </Button>\r\n        <Button\r\n          variant=\"link\"\r\n          className={`tab-button flex-grow-1 py-2 ${\r\n            activeTab === \"popularity\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setActiveTab(\"popularity\")}\r\n          style={{\r\n            color: activeTab === \"popularity\" ? \"#cdaf73\" : \"#a8a090\",\r\n            textDecoration: \"none\",\r\n            borderBottom:\r\n              activeTab === \"popularity\" ? \"2px solid #cdaf73\" : \"none\",\r\n            borderRadius: 0,\r\n            fontFamily: \"var(--font-cormorant)\",\r\n            letterSpacing: \"0.1em\",\r\n          }}\r\n        >\r\n          Popularity Rankings\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"chart-container p-4\">\r\n        <canvas\r\n          ref={chartRef}\r\n          width={600}\r\n          height={400}\r\n          style={{ width: \"100%\", height: \"auto\" }}\r\n          onMouseMove={(e) => {\r\n            const rect = chartRef.current.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n            const y = e.clientY - rect.top;\r\n\r\n            if (activeTab === \"genres\") {\r\n              // Handle hover for genre chart\r\n              const padding = { top: 40, right: 30, bottom: 60, left: 60 };\r\n              const chartWidth =\r\n                chartRef.current.width - padding.left - padding.right;\r\n              const chartHeight =\r\n                chartRef.current.height - padding.top - padding.bottom;\r\n              const groupWidth = chartWidth / genreTrendsData.length;\r\n              const barWidth = (groupWidth / 4) * 0.8;\r\n              const barSpacing = barWidth * 0.2;\r\n\r\n              for (let i = 0; i < genreTrendsData.length; i++) {\r\n                const groupX = padding.left + i * groupWidth;\r\n                for (let j = 0; j < 4; j++) {\r\n                  const barX =\r\n                    groupX + j * (barWidth + barSpacing) + groupWidth * 0.1;\r\n                  const value =\r\n                    genreTrendsData[i][\r\n                      [\"fiction\", \"nonFiction\", \"mystery\", \"sciFi\"][j]\r\n                    ];\r\n                  const barHeight = (value / 100) * chartHeight;\r\n                  const barY =\r\n                    chartRef.current.height - padding.bottom - barHeight;\r\n\r\n                  if (\r\n                    x >= barX &&\r\n                    x <= barX + barWidth &&\r\n                    y >= barY &&\r\n                    y <= chartRef.current.height - padding.bottom\r\n                  ) {\r\n                    setHoveredBar(`${i}-${j}`);\r\n                    return;\r\n                  }\r\n                }\r\n              }\r\n            } else if (activeTab === \"popularity\") {\r\n              // Handle hover for popularity chart\r\n              const padding = { top: 40, right: 30, bottom: 60, left: 150 };\r\n              const chartWidth =\r\n                chartRef.current.width - padding.left - padding.right;\r\n              const chartHeight =\r\n                chartRef.current.height - padding.top - padding.bottom;\r\n              const barHeight = (chartHeight / popularityData.length) * 0.7;\r\n              const barSpacing = (chartHeight / popularityData.length) * 0.3;\r\n\r\n              for (let i = 0; i < popularityData.length; i++) {\r\n                const barY = padding.top + i * (barHeight + barSpacing);\r\n                const barWidth = (popularityData[i].score / 100) * chartWidth;\r\n\r\n                if (\r\n                  x >= padding.left &&\r\n                  x <= padding.left + barWidth &&\r\n                  y >= barY &&\r\n                  y <= barY + barHeight\r\n                ) {\r\n                  setHoveredBar(i);\r\n                  return;\r\n                }\r\n              }\r\n            }\r\n\r\n            setHoveredBar(null);\r\n          }}\r\n          onMouseLeave={() => setHoveredBar(null)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"chart-description p-4 text-center\">\r\n        <p\r\n          style={{\r\n            color: \"#a8a090\",\r\n            fontSize: \"0.9rem\",\r\n            fontStyle: \"italic\",\r\n            maxWidth: \"600px\",\r\n            margin: \"0 auto\",\r\n          }}\r\n        >\r\n          {activeTab === \"genres\"\r\n            ? \"This visualization shows the shifting popularity of literary genres over the past five years, with non-fiction steadily gaining ground while traditional fiction sees a gradual decline.\"\r\n            : \"Based on reader ratings and critical acclaim, these classic works continue to resonate with audiences across generations, maintaining their literary significance.\"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookTrendsVisualization;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}